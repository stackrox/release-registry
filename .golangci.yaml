run:
  timeout: 16m

output:
  format: "junit-xml:outputs/report.xml,colored-line-number"

issues:
  exclude-use-default: false

  exclude-rules:
    - path: _test\.go
      linters:
        - wrapcheck
        - forbidigo
    - linters:
        - revive
      text: "should have a package comment"
    - linters:
        - revive
      text: "should not use dot imports"
    - linters:
        - revive
      text: "returns unexported type .* which can be annoying to use"
    - linters:
        - revive
      text: "error strings should not be capitalized or end with punctuation or a newline"
    - linters:
        - revive
      text: "should omit type int from declaration"
    - linters:
        - revive
      text: "don't use leading k in Go names"

linters-settings:
  gosec:
    includes:
    - G601
  revive:
    min-confidence: 0
  govet:
    enable-all: true
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - Print
          - Printf
          - Println
          - Debug
          - Debugf
          - Info
          - Infof
          - Warn
          - Warnf
          - Error
          - Errorf
  gocritic:
    enabled-checks:
      - commentFormatting
  nolintlint:
    allow-leading-space: false # require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
  staticcheck:
    go: "1.19"
    checks: [all]
  wrapcheck: {}
    # ignoreSigRegexps:
    #   - utils\.Should
    #   - errox\..+\.CausedBy(f)?
    #   - retry\.MakeRetryable
    #   - policy\.NewErr.*

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    # - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varnamelen
    - whitespace
    - wrapcheck
    - wsl
