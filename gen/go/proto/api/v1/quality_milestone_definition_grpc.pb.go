// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QualityMilestoneDefinitionServiceClient is the client API for QualityMilestoneDefinitionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QualityMilestoneDefinitionServiceClient interface {
	// Create creates a new quality milestone definition.
	Create(ctx context.Context, in *QualityMilestoneDefinitionServiceCreateRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceCreateResponse, error)
	// List returns all known quality milestone definitions.
	List(ctx context.Context, in *QualityMilestoneDefinitionServiceListRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceListResponse, error)
	// Get returns a quality milestone definitions for a given name.
	Get(ctx context.Context, in *QualityMilestoneDefinitionServiceGetRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceGetResponse, error)
}

type qualityMilestoneDefinitionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQualityMilestoneDefinitionServiceClient(cc grpc.ClientConnInterface) QualityMilestoneDefinitionServiceClient {
	return &qualityMilestoneDefinitionServiceClient{cc}
}

func (c *qualityMilestoneDefinitionServiceClient) Create(ctx context.Context, in *QualityMilestoneDefinitionServiceCreateRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceCreateResponse, error) {
	out := new(QualityMilestoneDefinitionServiceCreateResponse)
	err := c.cc.Invoke(ctx, "/proto.api.v1.QualityMilestoneDefinitionService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qualityMilestoneDefinitionServiceClient) List(ctx context.Context, in *QualityMilestoneDefinitionServiceListRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceListResponse, error) {
	out := new(QualityMilestoneDefinitionServiceListResponse)
	err := c.cc.Invoke(ctx, "/proto.api.v1.QualityMilestoneDefinitionService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qualityMilestoneDefinitionServiceClient) Get(ctx context.Context, in *QualityMilestoneDefinitionServiceGetRequest, opts ...grpc.CallOption) (*QualityMilestoneDefinitionServiceGetResponse, error) {
	out := new(QualityMilestoneDefinitionServiceGetResponse)
	err := c.cc.Invoke(ctx, "/proto.api.v1.QualityMilestoneDefinitionService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QualityMilestoneDefinitionServiceServer is the server API for QualityMilestoneDefinitionService service.
// All implementations must embed UnimplementedQualityMilestoneDefinitionServiceServer
// for forward compatibility
type QualityMilestoneDefinitionServiceServer interface {
	// Create creates a new quality milestone definition.
	Create(context.Context, *QualityMilestoneDefinitionServiceCreateRequest) (*QualityMilestoneDefinitionServiceCreateResponse, error)
	// List returns all known quality milestone definitions.
	List(context.Context, *QualityMilestoneDefinitionServiceListRequest) (*QualityMilestoneDefinitionServiceListResponse, error)
	// Get returns a quality milestone definitions for a given name.
	Get(context.Context, *QualityMilestoneDefinitionServiceGetRequest) (*QualityMilestoneDefinitionServiceGetResponse, error)
	mustEmbedUnimplementedQualityMilestoneDefinitionServiceServer()
}

// UnimplementedQualityMilestoneDefinitionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedQualityMilestoneDefinitionServiceServer struct {
}

func (UnimplementedQualityMilestoneDefinitionServiceServer) Create(context.Context, *QualityMilestoneDefinitionServiceCreateRequest) (*QualityMilestoneDefinitionServiceCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedQualityMilestoneDefinitionServiceServer) List(context.Context, *QualityMilestoneDefinitionServiceListRequest) (*QualityMilestoneDefinitionServiceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedQualityMilestoneDefinitionServiceServer) Get(context.Context, *QualityMilestoneDefinitionServiceGetRequest) (*QualityMilestoneDefinitionServiceGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedQualityMilestoneDefinitionServiceServer) mustEmbedUnimplementedQualityMilestoneDefinitionServiceServer() {
}

// UnsafeQualityMilestoneDefinitionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QualityMilestoneDefinitionServiceServer will
// result in compilation errors.
type UnsafeQualityMilestoneDefinitionServiceServer interface {
	mustEmbedUnimplementedQualityMilestoneDefinitionServiceServer()
}

func RegisterQualityMilestoneDefinitionServiceServer(s grpc.ServiceRegistrar, srv QualityMilestoneDefinitionServiceServer) {
	s.RegisterService(&QualityMilestoneDefinitionService_ServiceDesc, srv)
}

func _QualityMilestoneDefinitionService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualityMilestoneDefinitionServiceCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QualityMilestoneDefinitionServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.api.v1.QualityMilestoneDefinitionService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QualityMilestoneDefinitionServiceServer).Create(ctx, req.(*QualityMilestoneDefinitionServiceCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QualityMilestoneDefinitionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualityMilestoneDefinitionServiceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QualityMilestoneDefinitionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.api.v1.QualityMilestoneDefinitionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QualityMilestoneDefinitionServiceServer).List(ctx, req.(*QualityMilestoneDefinitionServiceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QualityMilestoneDefinitionService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualityMilestoneDefinitionServiceGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QualityMilestoneDefinitionServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.api.v1.QualityMilestoneDefinitionService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QualityMilestoneDefinitionServiceServer).Get(ctx, req.(*QualityMilestoneDefinitionServiceGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QualityMilestoneDefinitionService_ServiceDesc is the grpc.ServiceDesc for QualityMilestoneDefinitionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QualityMilestoneDefinitionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.api.v1.QualityMilestoneDefinitionService",
	HandlerType: (*QualityMilestoneDefinitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _QualityMilestoneDefinitionService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _QualityMilestoneDefinitionService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _QualityMilestoneDefinitionService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api/v1/quality_milestone_definition.proto",
}
